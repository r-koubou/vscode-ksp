#-----------------------------------------------------------------------------
# ant ビルド用プロパティーファイル
#-----------------------------------------------------------------------------

# プロジェクト名
kspsyntaxparser.name = KSPSyntaxParser

# バージョン
kspsyntaxparser.version = 0.0.1

# 実行ファイル名（拡張子以外の部分）
kspsyntaxparser.final-name = KSPSyntaxParser

#-----------------------------------------------------------------------------
# コンパイル / jarアーカイブオプション
#-----------------------------------------------------------------------------

# javac タスクの 'source' オプション
kspsyntaxparser.javac.source-option = 1.8

# javac タスクの 'target' オプション
kspsyntaxparser.javac.target-option = 1.8

# javac タスクの 'debug' オプション
kspsyntaxparser.javac.debug-option = on

# javac タスクの 'encoding' オプション
kspsyntaxparser.javac.encoding-option = UTF-8

# 外部の依存クラスライブラリファイルの場所
kspsyntaxparser.depends.dir = lib

# 外部の依存クラスライブラリファイル名（複数ある場合はカンマ区切りで）
kspsyntaxparser.depends = *.jar

# マニフェストファイル名
kspsyntaxparser.manifest = build/MANIFEST.MF


#-----------------------------------------------------------------------------
# javadoc オプション
#-----------------------------------------------------------------------------

# JDK等標準 API へのハイパーリンク指定
kspsyntaxparser.javadoc.link = https://docs.oracle.com/javase/jp/8/docs/api/


#-----------------------------------------------------------------------------
# ディレクトリ設定
#-----------------------------------------------------------------------------

# コンパイルの出力先やワークディレクトリとして使用するフォルダ名
kspsyntaxparser.target = target

# ソースフォルダ
kspsyntaxparser.src = src

# java ソースフォルダ
kspsyntaxparser.src.main = src/java

# jarアーカイブ時に同梱するリソースデータのフォルダ( src/ 起点 )
# ant の Filter で使用可能な構文で記述できます。
kspsyntaxparser.res.dir = resources/**/*


# その他 jarアーカイブには含まないリソースファイル等の置き場所 (配布パッケージに含めるファイル)
# 配布パッケージ作成時、ルートディレクトリに配備される。
# 例： readme.txt 等はここに置く
kspsyntaxparser.package.dir = src/package

# アプリケーションが使用するjarアーカイブに含まない外部リソースファイルのフォルダ名
# kspsyntaxparser.data.dir = data

# javadoc に同梱する固有のファイルを置く場所
kspsyntaxparser.javadoc.data.dir = src/javadoc

#-----------------------------------------------------------------------------
# 配備設定
#-----------------------------------------------------------------------------

# もし、アプリケーションの jar アーカイブファイルに
# 外部のクラスライブラリのファイルを同梱する場合は
# コメントを解除してください。
kspsyntaxparser.enable-including-dependency = yes


# 配布パッケージにプログラムソースコード一式を同梱する場合は
# コメントを解除してください。
#kspsyntaxparser.srcarchive = yes

# もし、上記の設定以外に、配布パッケージ作成時に同梱するファイル/フォルダがある場合は
# フォルダ、ファイル名のパータン文字列を記述してください。
# ant の Filter で使用可能な構文で記述できます。
kspsyntaxparser.other.archivefiles = data/**


#-----------------------------------------------------------------------------
# ant 上からのプログラムの実行
#-----------------------------------------------------------------------------

# プログラム実行時にコマンドライン引数を指定する場合は設定をしてください。
kspsyntaxparser.run.args =

# プログラム実行時にVMオプションを指定する場合は設定をしてください。
kspsyntaxparser.run.vmargs =

#-----------------------------------------------------------------------------
# javacc 関連
#-----------------------------------------------------------------------------

# JavaCCを使用する場合はコメントを解除してください。
kspsyntaxparser.enable-using-javacc = yes

# javacc のインストール先
kspsyntaxparser.javacc.home = ./javacc

# JJTree が生成する文法定義ファイルの出力先
kspsyntaxparser.javacc.jjtdest = ${kspsyntaxparser.src.main}/net/rkoubou/kspparser/javacc/generated

# javaccパーサジェネレータが生成するソースファイルの出力先
kspsyntaxparser.javacc.dest = ${kspsyntaxparser.javacc.jjtdest}

# 文法定義ファイル名プリフィクス
kspsyntaxparser.javacc.prefix = KSPParser

# 文法定義ファイル名
kspsyntaxparser.javacc.jjt = src/javacc/${kspsyntaxparser.javacc.prefix}.jjt

# JJTree で生成する文法定義ファイル名
kspsyntaxparser.javacc.spec = ${kspsyntaxparser.javacc.jjtdest}/${kspsyntaxparser.javacc.prefix}.jj
