# encoding: utf-8

import re
import os
import sys

# http://pypi.python.org/pypi/xlrd
import xlrd

import KspExcelUtil

def convert( input, output, sheet_name ):

    INPUT  = input
    TARGET = output

    TEMPLATE = """
        "{intelliSense}":
        {{
            "snippet_string": "{snippet_string}",
            "signature":   "{signature}",
            "description": "{description}"
        }},"""

    HEADER = """//
    // Generated by /data/Excel2Completion.py
    //
    export var CompletionList = {"""
    FOOTER = "};"

    book    = xlrd.open_workbook( INPUT )
    fw      = open( TARGET, 'w' )

    fw.write( HEADER )

    sheet     = book.sheet_by_name( sheet_name )
    rowLength = sheet.nrows

    for row in range( 1, rowLength ):
        name    = KspExcelUtil.getCellFromColmnName( sheet, row, KspExcelUtil.HEADER_COMPLETE_NAME ).value.strip()
        snippet = KspExcelUtil.getCellFromColmnName( sheet, row, KspExcelUtil.HEADER_SNIPPET_BODY ).value.strip()
        sig     = KspExcelUtil.getCellFromColmnName( sheet, row, KspExcelUtil.HEADER_COMPLETE_SIG ).value.strip()
        desc    = KspExcelUtil.getCellFromColmnName( sheet, row, KspExcelUtil.HEADER_DESCRIPTION ).value.strip()

        desc = KspExcelUtil.append_newline( desc )
        snippet = KspExcelUtil.append_newline( snippet )

        if( len( name ) == 0 or name.startswith( "*" ) ):
            continue

        desc = desc.replace( "\"", "\\\"" )
        sig  = sig.replace( "( ", "(" )
        sig  = sig.replace( " )", ")" )
        sig  = sig.replace( ", ", "," )

        text = TEMPLATE.format(
            intelliSense = name,
            snippet_string = snippet,
            signature    = sig,
            description  = desc
        )

        fw.write( text )

    fw.write( "\n" )
    fw.write( FOOTER )
    fw.write( "\n" )
    fw.close()
    print( "Done: " + TARGET )


if __name__ == "__main__":
    TARGET_BASEDIR = "../src/features/generated/"
    CONVET_LIST = [
        # 0: Input
        # 1: Target
        # 2: Sheet name
        [ "KSP_Completion.xlsx", TARGET_BASEDIR + "KSPCompletionCommand.ts",   "Command" ],
        [ "KSP_Completion.xlsx", TARGET_BASEDIR + "KSPCompletionVariable.ts",  "Variable" ],
    ]
    for i in CONVET_LIST:
        convert( i[0], i[1], i[2] )
